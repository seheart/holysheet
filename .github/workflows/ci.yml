name: HolySheet CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest black flake8 safety
    
    - name: Code formatting check
      run: black --check --diff .
    
    - name: Lint with flake8
      run: |
        # Stop on syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Security check
      run: safety check
    
    - name: Test app imports
      run: python -c "import app; print('‚úÖ App imports successfully')"
    
    - name: Test with pytest (if tests exist)
      run: |
        if [ -d "tests" ]; then
          pytest tests/ -v
        else
          echo "üìù No tests directory found - skipping pytest"
        fi

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/python@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  docker-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    
    - name: Test Docker build (future-proofing)
      run: |
        echo "üê≥ Docker build test placeholder"
        echo "Will add when Dockerfile is created"